# split panes using | and -
bind-key v split-window -h
bind-key h split-window -v
unbind '"'
unbind %
# remap prefix from 'C-b' to 'C-f'
unbind C-b
set-option -g prefix C-f
bind-key C-f send-prefix

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on
# don't rename windows automatically
set-option -g allow-rename off
# vim keys
set-window-option -g mode-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."
bind-key C-r command-prompt -I "#S" { rename-session "%%" } 
bind-key C-s command-prompt -I "" { new-session -s "%%" }
bind -n C-k send-keys -R Enter \; clear-history \;
set-option -sg escape-time 10
set-option -g focus-events on
# support true-color with italics
set -g default-terminal "xterm-256color-italic"
set -as terminal-overrides ',*:Tc:sitm=\E[3m'
# Ensure COLORTERM is properly inherited by all processes
set-environment -g COLORTERM truecolor


# tmux.nvim support
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 10'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 10'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 10'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 10'

bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 10
bind-key -T copy-mode-vi M-k resize-pane -U 10
bind-key -T copy-mode-vi M-l resize-pane -R 10

# set default directory for new windows in this session to current directory:
bind-key C-p attach-session -c "#{pane_current_path}" \; display-message "Changed session to: #{pane_current_path}"

# Quick pane switching by number
bind-key -n M-1 select-pane -t 1
bind-key -n M-2 select-pane -t 2
bind-key -n M-3 select-pane -t 3
bind-key -n M-4 select-pane -t 4

# Pane zoom toggle (focus single pane)
bind-key -n M-z resize-pane -Z

# Last pane (quick toggle between two panes)
bind-key -n 'M-\' last-pane

# Quick window switching
bind-key -n M-Tab next-window
bind-key -n M-S-Tab previous-window

# <Prefix>‑K  →  jump to another session, then kill the one we were in
bind-key K run-shell '
    curr=$(tmux display -p "#S")                     # name of the session we’re in
    if [ "$(tmux list-sessions | wc -l)" -le 1 ]; then
        tmux display-message "Only one session – nothing to kill"
        exit
    fi

    # “last session” is the one you were in just before this one.
    # Switching to it keeps the client alive, so we can safely kill the old session.
    tmux switch-client -l                           # hop to last‑visited session
    tmux kill-session  -t "$curr"                   # tear down the old one
'
